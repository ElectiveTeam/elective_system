<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wisdsoft.electivesystem.mapper.RelationshipMapper">
  <resultMap id="BaseResultMap" type="cn.wisdsoft.electivesystem.pojo.Relationship">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="select_id" jdbcType="INTEGER" property="selectId" />
    <result column="stu_id" jdbcType="VARCHAR" property="stuId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, select_id, stu_id, stu_name, remark
  </sql>
  <select id="selectByExample" parameterType="cn.wisdsoft.electivesystem.pojo.RelationshipExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from relationship
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from relationship
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from relationship
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.wisdsoft.electivesystem.pojo.RelationshipExample">
    delete from relationship
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wisdsoft.electivesystem.pojo.Relationship">
    insert into relationship (id, select_id, stu_id, 
      stu_name, remark)
    values (#{id,jdbcType=INTEGER}, #{selectId,jdbcType=INTEGER}, #{stuId,jdbcType=VARCHAR}, 
      #{stuName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.wisdsoft.electivesystem.pojo.Relationship">
    insert into relationship
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="selectId != null">
        select_id,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="selectId != null">
        #{selectId,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wisdsoft.electivesystem.pojo.RelationshipExample" resultType="java.lang.Long">
    select count(*) from relationship
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update relationship
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.selectId != null">
        select_id = #{record.selectId,jdbcType=INTEGER},
      </if>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=VARCHAR},
      </if>
      <if test="record.stuName != null">
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update relationship
    set id = #{record.id,jdbcType=INTEGER},
      select_id = #{record.selectId,jdbcType=INTEGER},
      stu_id = #{record.stuId,jdbcType=VARCHAR},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.wisdsoft.electivesystem.pojo.Relationship">
    update relationship
    <set>
      <if test="selectId != null">
        select_id = #{selectId,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.wisdsoft.electivesystem.pojo.Relationship">
    update relationship
    set select_id = #{selectId,jdbcType=INTEGER},
      stu_id = #{stuId,jdbcType=VARCHAR},
      stu_name = #{stuName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--
      查询学生已选课程
    -->
  <select id="selectUserCurriculum" resultMap="myMap">
    SELECT
      t.id AS termId,
      term_name AS termName,
      college AS college,
      t.`status` AS termStatus,
      cu.id AS curriculumId,
      cu.cu_name AS cuName,
      c.id AS courseId,
      class_time AS classTime,
      place AS place,
      class_hour AS classHour,
      credit AS credit,
      grade AS grade,
      r.select_id AS selectId,
      teacher_name AS teacherName
    FROM term_resource AS t,course AS c, curriculum AS cu,selection AS s, relationship AS r
    WHERE
      t.id = c.tr_id AND
      c.id = cu.cou_id AND
      cu.id = s.cu_id AND
      s.id = r.select_id AND
      r.stu_id = #{stuId}
      <if test="termName != null">
        AND t.term_name = #{termName}
      </if>
    ORDER BY t.id ASC
  </select>
  <resultMap id="myMap" type="cn.wisdsoft.electivesystem.pojo.TermResource">
      <id property="id" column="termId" />
      <result property="termName" column="termName" />
      <result property="college" column="college" />
      <result property="status" column="termStatus" />
      <collection property="studentDos" ofType="cn.wisdsoft.electivesystem.pojo.StudentDo">
          <result property="curriculumId" column="curriculumId" />
          <result property="cuName" column="cuName" />
          <result property="courseId" column="courseId" />
          <result property="place" column="place" />
          <result property="classTime" column="classTime" />
          <result property="classHour" column="classHour" />
          <result property="credit" column="credit" />
          <result property="grade" column="grade" />
          <result property="selectId" column="selectId" />
          <result property="teacherName" column="teacherName" />
      </collection>
  </resultMap>
  <!--
    学生退课
  -->
  <delete id="delRelationByStuIdAndSelectId">
    delete from relationship
    where stu_id = #{stuId} AND select_id = #{selectId};
  </delete>
  <!--
    判断学生是否可以选课
  -->
  <select id="selectStatus" resultType="cn.wisdsoft.electivesystem.pojo.TermResource">
    select open_time,close_time from term_resource
      WHERE
      (college = '校选' or college = #{category}) AND
      (status = 1 or status = 3);
  </select>
  <!--
    判断学生是否已选对应课程
  -->
  <select id="selectChooseStatus" resultType="integer">
    select count(*) from relationship as r,selection as s,curriculum as c
	where
	r.stu_id = #{stuId} and
	r.select_id = s.id and
	s.cu_id = c.id and
	c.id = #{curriculumId};
  </select>
  <!--
    通过课程ID查询选课ID
  -->
  <select id="selectSelectionId" resultType="integer">
    select s.id from curriculum as c,selection as s where c.id = s.cu_id and c.id = #{curriculumId}
  </select>
  <!--
    查询学生院选课和校选课选课条数
  -->
  <select id="selectYard" resultType="integer">
    SELECT count(*)
      FROM
        relationship as r,
        selection as s,
        curriculum as c,
        course as co,
        term_resource as t
      WHERE
        r.select_id = s.id and
        s.cu_id = c.id and
        c.cou_id = co.id and
        co.tr_id = t.id and
        r.stu_id = #{stuId} and
        t.college = #{yard};
  </select>
  <select id="selectSchool" resultType="integer">
    SELECT count(*)
      FROM
        relationship as r,
        selection as s,
        curriculum as c,
        course as co,
        term_resource as t
      WHERE
        r.select_id = s.id and
        s.cu_id = c.id and
        c.cou_id = co.id and
        co.tr_id = t.id and
        r.stu_id = #{stuId} and
        t.college = '校选';
  </select>
  <select id="checkCurriculum" resultType="integer">
    SELECT DISTINCT
      co.id
    FROM
      relationship AS r,
      selection AS s,
      curriculum AS c,
      course AS co
    WHERE
      r.select_id = s.id
      AND s.cu_id = c.id
      AND c.cou_id = co.id
      AND r.stu_id = #{stuId};
  </select>
</mapper>