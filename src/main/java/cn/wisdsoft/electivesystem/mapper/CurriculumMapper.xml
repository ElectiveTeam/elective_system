<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wisdsoft.electivesystem.mapper.CurriculumMapper">
  <resultMap id="BaseResultMap" type="cn.wisdsoft.electivesystem.pojo.Curriculum">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cu_name" jdbcType="VARCHAR" property="cuName" />
    <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
    <result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
    <result column="class_hour" jdbcType="INTEGER" property="classHour" />
    <result column="credit" jdbcType="DECIMAL" property="credit" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="cou_id" jdbcType="INTEGER" property="couId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.wisdsoft.electivesystem.pojo.Curriculum">
    <result column="describe" jdbcType="LONGVARCHAR" property="describe" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cu_name, teacher_id, teacher_name, class_hour, credit, grade, status, cou_id, 
    remark
  </sql>
  <sql id="Blob_Column_List">
    `describe`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.wisdsoft.electivesystem.pojo.CurriculumExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from curriculum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.wisdsoft.electivesystem.pojo.CurriculumExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from curriculum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from curriculum
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from curriculum
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.wisdsoft.electivesystem.pojo.CurriculumExample">
    delete from curriculum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wisdsoft.electivesystem.pojo.Curriculum" keyProperty="id" useGeneratedKeys="true">
    insert into curriculum (id, cu_name, teacher_id, 
      teacher_name, class_hour, credit, 
      grade, status, cou_id, 
      remark,`describe`)
    values (#{id,jdbcType=INTEGER}, #{cuName,jdbcType=VARCHAR}, #{teacherId,jdbcType=VARCHAR}, 
      #{teacherName,jdbcType=VARCHAR}, #{classHour,jdbcType=INTEGER}, #{credit,jdbcType=DECIMAL}, 
      #{grade,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{couId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{describe,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.wisdsoft.electivesystem.pojo.Curriculum" keyProperty="id" useGeneratedKeys="true">
    insert into curriculum
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cuName != null">
        cu_name,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="teacherName != null">
        teacher_name,
      </if>
      <if test="classHour != null">
        class_hour,
      </if>
      <if test="credit != null">
        credit,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="couId != null">
        cou_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="describe != null">
        `describe`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cuName != null">
        #{cuName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="classHour != null">
        #{classHour,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=DECIMAL},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="couId != null">
        #{couId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wisdsoft.electivesystem.pojo.CurriculumExample" resultType="java.lang.Long">
    select count(*) from curriculum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update curriculum
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cuName != null">
        cu_name = #{record.cuName,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherName != null">
        teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.classHour != null">
        class_hour = #{record.classHour,jdbcType=INTEGER},
      </if>
      <if test="record.credit != null">
        credit = #{record.credit,jdbcType=DECIMAL},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.couId != null">
        cou_id = #{record.couId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.describe != null">
        `describe` = #{record.describe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update curriculum
    set id = #{record.id,jdbcType=INTEGER},
      cu_name = #{record.cuName,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      class_hour = #{record.classHour,jdbcType=INTEGER},
      credit = #{record.credit,jdbcType=DECIMAL},
      grade = #{record.grade,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      cou_id = #{record.couId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      describe = #{record.describe,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update curriculum
    set id = #{record.id,jdbcType=INTEGER},
      cu_name = #{record.cuName,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      class_hour = #{record.classHour,jdbcType=INTEGER},
      credit = #{record.credit,jdbcType=DECIMAL},
      grade = #{record.grade,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      cou_id = #{record.couId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.wisdsoft.electivesystem.pojo.Curriculum">
    update curriculum
    <set>
      <if test="cuName != null">
        cu_name = #{cuName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null">
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="classHour != null">
        class_hour = #{classHour,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=DECIMAL},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="couId != null">
        cou_id = #{couId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        `describe` = #{describe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.wisdsoft.electivesystem.pojo.Curriculum">
    update curriculum
    set cu_name = #{cuName,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=VARCHAR},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      class_hour = #{classHour,jdbcType=INTEGER},
      credit = #{credit,jdbcType=DECIMAL},
      grade = #{grade,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      cou_id = #{couId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      `describe` = #{describe,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.wisdsoft.electivesystem.pojo.Curriculum">
    update curriculum
    set cu_name = #{cuName,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=VARCHAR},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      class_hour = #{classHour,jdbcType=INTEGER},
      credit = #{credit,jdbcType=DECIMAL},
      grade = #{grade,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      cou_id = #{couId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      `describe` = #{describe,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selCurByTeaId" parameterType="String" resultMap="BaseResultMap">
    SELECT s.id id,c.cu_name FROM curriculum c ,selection s WHERE c.id=s.cu_id AND c.teacher_id=#{teacherId}
  </select>
  <select id="selectAllCurriculum" resultType="cn.wisdsoft.electivesystem.pojo.CurriculumDo">
    select
      t.term_name as termName,
      t.college as college,
      co.id as courseId,
      c.id as curriculumId,
      c.cu_name as curriculumName,
      c.teacher_name as teacherName,
      c.class_hour as classHour,
      c.credit as credit,
      s.class_time as classTime,
      s.place as place,
      s.max_number as maxNumber
	from
      term_resource as t,
      course as co,
      curriculum as c,
      selection as s
	where
      co.tr_id = t.id and
      c.cou_id = co.id and
      s.cu_id = c.id and
      c.status = 2 and
      (t.status = 1 or t.status = 3) and
      t.term_name = #{termName} and
      t.college = #{category}
  </select>
  <!--
    查询最大人数
  -->
  <select id="selectMaxNumber" resultType="integer">
    select s.max_number from curriculum as c,selection as s where s.cu_id = c.id and c.id = #{curriculumId};
  </select>

  <select id="selectDetails" resultType="cn.wisdsoft.electivesystem.pojo.CurriculumDo">
    SELECT
		t.term_name AS termName,
		t.college AS college,
		cu.id AS courseId,
		c.id AS curriculumId,
		c.cu_name AS curriculumName,
		c.teacher_name AS teacherName,
		s.id AS selectionId,
		s.class_time AS classTime,
		s.place AS place,
		c.class_hour AS classHour,
		c.credit AS credit,
		c.`describe` AS `describe`
	FROM
		curriculum AS c,
		course AS cu,
		term_resource AS t,
		selection AS s
	WHERE
		c.cou_id = cu.id AND
		cu.tr_id = t.id AND
		s.cu_id = c.id AND
		c.id = #{curriculumId}
  </select>
    <select id="selByTeacherId" resultMap="BaseResultMap">
    select s.id ,cc.cu_name
    FROM selection s,curriculum cc,course c,term_resource t
    WHERE s.cu_id = cc.id AND cc.cou_id = c.id AND c.tr_id = t.id AND t.`status` = #{status} and cc.teacher_id = #{teacherId}
  </select>
  <select id="selectCurriculum" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"/>
  	form curriculum
  </select>
  <select id="findCurriculumByCollegeNameAndStatus" resultMap="BaseResultMap">
  	SELECT c.* FROM curriculum c,course cou, term_resource term
	WHERE term.id = cou.tr_id AND cou.id = c.cou_id AND
	term.status != 7 AND term.college = #{ collegeName }
	AND c.status != 0 ORDER BY c.status
  </select>
</mapper>